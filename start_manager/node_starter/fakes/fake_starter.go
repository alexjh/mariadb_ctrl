// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry/mariadb_ctrl/start_manager/node_starter"
)

type FakeStarter struct {
	StartNodeFromStateStub        func(string) (string, error)
	startNodeFromStateMutex       sync.RWMutex
	startNodeFromStateArgsForCall []struct {
		arg1 string
	}
	startNodeFromStateReturns struct {
		result1 string
		result2 error
	}
}

func (fake *FakeStarter) StartNodeFromState(arg1 string) (string, error) {
	fake.startNodeFromStateMutex.Lock()
	fake.startNodeFromStateArgsForCall = append(fake.startNodeFromStateArgsForCall, struct {
		arg1 string
	}{arg1})
	fake.startNodeFromStateMutex.Unlock()
	if fake.StartNodeFromStateStub != nil {
		return fake.StartNodeFromStateStub(arg1)
	} else {
		return fake.startNodeFromStateReturns.result1, fake.startNodeFromStateReturns.result2
	}
}

func (fake *FakeStarter) StartNodeFromStateCallCount() int {
	fake.startNodeFromStateMutex.RLock()
	defer fake.startNodeFromStateMutex.RUnlock()
	return len(fake.startNodeFromStateArgsForCall)
}

func (fake *FakeStarter) StartNodeFromStateArgsForCall(i int) string {
	fake.startNodeFromStateMutex.RLock()
	defer fake.startNodeFromStateMutex.RUnlock()
	return fake.startNodeFromStateArgsForCall[i].arg1
}

func (fake *FakeStarter) StartNodeFromStateReturns(result1 string, result2 error) {
	fake.StartNodeFromStateStub = nil
	fake.startNodeFromStateReturns = struct {
		result1 string
		result2 error
	}{result1, result2}
}

var _ node_starter.Starter = new(FakeStarter)
